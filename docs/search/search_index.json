{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Transmogrifier","text":""},{"location":"#finally-a-robust-artist-friendly-open-source-3d-batch-converter","title":"Finally - a robust, artist-friendly, open-source 3D batch converter.","text":"<p>Transmogrifier is a Blender addon for batch converting 3D files and associated textures into other formats.</p> <ul> <li>\u23f3 Saves Time. Automates the boring stuff so you can focus on creating instead of converting. </li> <li>\ud83d\udee1\ufe0f Private and Secure. Runs offline/locally.  No account needed.</li> <li>\u2693 Non-Destructive. Preserves original files.  Edits textures on-the-fly.</li> <li>\ud83c\udf10 AR-Ready.  Designed with e-commerce visualization for the Web and AR in mind.</li> <li>\ud83d\udd13 Open Source/Licensed-Free. View, modify, and share the code freely. </li> <li>\ud83c\udd93 Free. No paywall, no trial, no strings attached.</li> </ul>"},{"location":"#supported-formats","title":"Supported Formats","text":"<p>Transmogrifier supports batch conversions between many import and export formats.</p> <p>Supported Formats</p> <ul> <li><code>FBX</code></li> <li><code>OBJ</code></li> <li><code>glTF</code>/<code>GLB</code></li> <li><code>STL</code> </li> <li><code>PLY</code> </li> <li><code>X3D</code> </li> <li><code>DAE</code></li> <li><code>ABC</code></li> <li><code>USD</code>/<code>USDA</code>/<code>USDC</code>/<code>USDZ</code></li> </ul>"},{"location":"#how-it-works","title":"How it Works","text":"<p>Transmogrifier uses a simple algorithm with powerful features.</p> <ol> <li>\ud83d\udd0d Transmogrifier searches through an entire folder hierarchy for 3D files of the desired format(s). </li> <li>For every discovered 3D file of the desired format(s), Transmogrifier then<ol> <li>\ud83e\uddf9 refreshes the scene</li> <li>\ud83d\udce5 imports the file</li> <li>\ud83c\udfc1 applies textures to the model</li> <li>\ud83d\udcda adds the model to the given asset library</li> <li>\ud83d\udce4 exports the model in the new format</li> <li>\u23ec auto-optimizes the export file's size</li> </ol> </li> <li>\ud83d\udccb Reports a summary of the batch conversion in a CSV file.</li> </ol> <p>Tip</p> <p>Many additional conversion utilities are also available within this general workflow.  Check out all the Features!</p> <p>The diagram below demonstrates the variety of ways in which Transmogrifier can convert models with respect to available textures and the chosen import and export formats. </p> <p> Models from Polyhaven (CC0). Each gray box with rounded corners indicates a directory.</p>"},{"location":"#license","title":"License","text":"<p>Transmogrifier is open-source/licensed-free software under the GNU GPL v3.0.</p> What is Free Software? <p>' \u201cFree software\u201d means software that respects users' freedom and community. Roughly, it means that the users have the freedom to run, copy, distribute, study, change and improve the software. Thus, \u201cfree software\u201d is a matter of liberty, not price. To understand the concept, you should think of \u201cfree\u201d as in \u201cfree speech,\u201d not as in \u201cfree beer.\u201d ' - GNU.org</p>"},{"location":"apply_textures/","title":"Apply Textures","text":"<p>Tired of clicking <code>Ctrl + Shift + T</code>?</p> <p>Transmogrifier adds Principled shader setups for you!  </p> <p>Transmogrifier can detect the presence of multiple image texture sets and non-destructively modify them during the conversion process. </p> <p></p>"},{"location":"apply_textures/#source","title":"Source","text":"<p>Transmogrifier can source textures in 3 different ways.</p> <p> Models from Polyhaven (CC0). Each gray box with rounded corners indicates a directory/folder.  The scenarios shown in the diagram above depend on whether the selected import or export formats support textures.</p> External Packed Custom"},{"location":"apply_textures/#external","title":"External","text":"<p><code>External</code> tells Transmogrifier to look for image textures adjacent to the imported model.</p> <p>Example</p> <p>An example of this scenario would be converting <code>FBX</code> files with textures into <code>GLB</code> files.</p> <p>Textures can exist adjacent to the imported model in the following ways.</p> Texture Sets in <code>textures</code> Subdirectory Texture Sets in <code>textures</code> Subdirectory &gt; Subdirectories Texture Sets Adjacent to Import File <code>textures</code> <code>textures &gt; [Texture Set 1], [Texture Set 2], etc.</code> Import File <code>Directory</code> in a \"textures\" subfolder relative to the import file in \"[texture set]\" subfolders inside a \"textures\" subfolder relative to the import file in the same directory as the import file \u2705 Best Practice, follows modern conventions \ud83d\udfe2 Good Practice, ultra-organized \ud83d\udfe1 Questionable Practice, disorganized"},{"location":"apply_textures/#packed","title":"Packed","text":"<p><code>Packed</code> tells Transmogrifier to use any image textures packed into the imported file for conversion</p> <p>Example</p> <p>An example of this scenario would be converting <code>GLB</code> files to <code>USDZ</code> files.</p>"},{"location":"apply_textures/#custom","title":"Custom","text":"<p><code>Custom</code> tells Transmogrifier to use image textures from a single directory and apply them to all models converted.</p> <p>Example</p> <p>An example of this scenario would be converting many separate <code>OBJ</code> files that all use the same textures into <code>USDZ</code> files.</p> <p>Tip</p> <p>Transmogrifier looks for textures inside a <code>Custom</code> directory in the same manner it does for <code>External</code> textures.</p>"},{"location":"apply_textures/#3-texturing-rules","title":"3 Texturing Rules","text":"<p>There are three naming conventions that must be followed in order for textures to be properly imported, materials created, and materials assigned to the right objects.</p> Rule 1: TransparencyRule 2: Single Texture SetsRule 3: Multiple Texture Sets"},{"location":"apply_textures/#rule-1-transparency","title":"Rule 1: Transparency","text":"<p>Transparent objects must have the word <code>transparent</code> in their names and exist as separate objects from opaque objects.</p> <p>Objects that should appear transparent must have the word \"transparent\" present somewhere in their names. This tells Transmogrifier that it should perform the following steps:</p> <ol> <li>Duplicate the material as \"[material]_transparent\" <ol> <li>Turn on \"Alpha Blend\" blending mode</li> </ol> </li> <li>Assign \"[material]\" to the opaque objects </li> <li>Assign \"[material]_transparent\" to the objects with the word <code>transparent</code> in their names. </li> </ol> <p>Info</p> <p>This convention works for multiple texture sets as well.</p> <p>Example: Rule 1</p>"},{"location":"apply_textures/#rule-2-single-texture-sets","title":"Rule 2: Single Texture Sets","text":"<p>Per import file, if only 1 texture set is present, object names don't matter except for <code>Rule 1</code>.</p> <p>For <code>External</code> and <code>Custom</code> texture sources and for models with only one texture set present, <code>Rule 1</code> doesn't matter because it is assumed  that single texture set should be applied to all the objects in the scene. </p> <p>Example: Rule 2</p> <p></p>"},{"location":"apply_textures/#rule-3-multiple-texture-sets","title":"Rule 3: Multiple Texture Sets","text":"<p>Per import file, objects' names must include their corresponding texture sets' names if &gt;1 texture set is present and textures <code>Source</code> is either <code>External</code> or <code>Custom</code>.</p> This Rule does not apply to <code>Packed</code> textures scenarios. <p>For <code>Packed</code> textures source, Transmogrifier automatically keeps associated materials, textures, and objects synchronized. </p> <p>For models with more than one texture set present, a texture set naming convention must also be followed for Transmogrifier to correctly import and assign multiple texture sets to the proper objects. </p> <p>Simply ensure that each texture sets' names are</p> <ol> <li>distinct between texture sets and </li> <li> <p>consistent between </p> <ol> <li>each PBR image in each texture set and </li> <li> <p>texture sets and the corresponding objects to which those textures should be applied (See image below). </p> <p>Warning</p> <p>As such, having multiple materials assigned as distinct slots to different meshes within one object is not possible. </p> </li> </ol> </li> </ol> <p>Example: Rule 3</p> <p></p>"},{"location":"apply_textures/#edit-textures","title":"Edit Textures","text":"<p>Edit images textures non-destructively &amp; on-the-fly. For every item converted, Transmogrifier copies textures to a temporary directory and performs modifications to the copies only. Original image textures are always preserved, unedited, at their full resolution.</p> <p>Click <code>+ Add Texture Edit</code> to add a texture edit profile.  Click <code>\u2716</code> to remove a profile.</p> <p></p>"},{"location":"apply_textures/#edit-textures-presets","title":"Edit Textures Presets","text":"<p>Create custom <code>Edit Textures</code> presets for quickly switching between different image editing scenarios. (1)</p> <ol> <li><code>Edit Textures</code> presets are stored as <code>JSON</code> files in your Blender preferences directory. </li> </ol> <code>+</code> Add Preset<code>v</code> Select Preset<code>-</code> Remove Preset<code>-</code> <code>+</code> Edit Preset <p>Click the plus button <code>+</code> to create a preset from the current Edit Textures settings and profiles, giving it a custom name.  Click <code>OK</code> to save it.</p> <p></p> <p>Select an existing preset from the menu.</p> <p></p> <p>Remove a workflow by selecting it from the menu, then clicking the minus button <code>-</code>.</p> <p></p> <p>To edit an <code>Edit Textures</code> preset,</p> <ol> <li>Select your preset.</li> <li>Make your adjustments to settings.</li> <li>Click the minus button <code>-</code> to remove the preset.</li> <li>Click the plus button <code>+</code> and give the new preset the same name.  Click <code>OK</code>.</li> </ol> <p>Note</p> <p>This is more inconvenient than some kind of \"save\" button, but it keeps Transmogrifier's conventions more consistent with Blender because Blender approaches user presets in this manner.</p> <p></p>"},{"location":"apply_textures/#resize-textures","title":"Resize Textures","text":"<p>Resize images textures non-destructively &amp; on-the-fly. </p> <ol> <li>Images will not be upscaled.</li> </ol> Supported Resolutions <ul> <li><code>8192</code></li> <li><code>4096</code></li> <li><code>2048</code></li> <li><code>1024</code></li> <li><code>512</code></li> <li><code>256</code></li> <li><code>128</code></li> </ul> <p></p>"},{"location":"apply_textures/#reformat-textures","title":"Reformat Textures","text":"<p>Reformat textures non-destructively &amp; on-the-fly. </p> Supported Image Formats <ul> <li><code>PNG</code></li> <li><code>JPEG</code> (.jpg)</li> <li><code>TARGA</code></li> <li><code>TIFF</code></li> <li><code>WEBP</code></li> <li><code>BMP</code></li> <li><code>OPEN_EXR</code></li> </ul> <p></p>"},{"location":"apply_textures/#regex-textures","title":"Regex Textures","text":"<p>Use regular expressions (aka <code>regex</code>) to correct misspellings and inconsistencies in image texture PBR tags. This helps to guarantee their detection and import by Transmogrifier.  </p> <p>Example</p> Original Name Regexed Name Reason for Regex lightbulb_01_diff_2k.jpg lightbulb_01_BaseColor_2k.jpg Normalize lightbulb_01_mtal_2k.png lightbulb_01_Metallic_2k.png Misspelling lightbulb_01_transprancy_2k.png lightbulb_01_Alpha_2k.png Misspelling Monkey Base Color.webp Monkey_BaseColor.webp Normalize <p>Node Wrangler</p> <p>Transmogrifier relies on Node Wrangler's <code>Add Principled Setup</code> feature to detect image textures, import textures, and create a material shading network.</p>"},{"location":"apply_textures/#edit-pbr-tags","title":"Edit PBR Tags","text":"<p>You can modify the PBR tags that Node Wrangler looks for in image textures, which it uses to plug textures into the proper input of the Principled BSDF shader.  Simply mimic the recording below to input your own custom PBR tag conventions:</p> <p></p> Recommended PBR tags <p>We recommend the following tags for most conversion scenarios:</p> Regexed Name Recommended PBR Tags <code>BaseColor</code> albedo base col color basecolor diffuse diff <code>Subsurface</code> sss subsurface <code>Metallic</code> metallic metalness metal mtl <code>Specular</code> specularity specular spec spc <code>Roughness</code> roughness rough rgh <code>Gloss</code> gloss glossy glossiness <code>Normal</code> normal nor nrm nrml norm <code>Bump</code> bump bmp <code>Displacement</code> displacement displace disp dsp height heightmap <code>Transmission</code> transmission <code>Emission</code> emission emissive emit <code>Alpha</code> alpha opacity transparency <code>Ambient_Occlusion</code> ao ambient occlusion"},{"location":"apply_textures/#keep-edited-textures","title":"Keep Edited Textures","text":"<p><code>Keep Edited Textures</code> in order to have granular access to the images resulting from on-the-fly modifications. </p> <p>Tip</p> <p>This can be useful if you ever need to manually edit individual image textures later or want to troubleshoot textures that did not get assigned properly to your model(s).</p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"batch_convert/","title":"Batch Convert","text":"<p>Transmogrifier is a Blender addon for batch converting 3D files and associated textures into other formats.  The <code>Batch Convert</code> button is where it all starts.  Transmogrifier can accomplish in minutes what used to take hours.  </p> <p></p>"},{"location":"batch_convert/#forecast","title":"Forecast","text":"<p>Calculate the batch conversion and display an info message of the <code>Forecast</code>.</p> <p>Tip</p> <p>The Forecast helps ensure you selected the proper directory when you are expecting a specific number of models to be converted.</p> <p></p>"},{"location":"batch_convert/#workflow-presets","title":"Workflow Presets","text":"<p>Create custom Transmogrifier presets (aka <code>Workflows</code>) for quickly switching between different conversion scenarios. (1)</p> <ol> <li>Workflows are stored as <code>JSON</code> files in your Blender preferences directory. </li> </ol> <code>+</code> Add Preset<code>v</code> Select Preset<code>-</code> Remove Preset<code>-</code> <code>+</code> Edit Preset <p>Click the plus button <code>+</code> to create a <code>Workflow</code> from all of the current Transmogrifier settings, giving it a custom name.  Click <code>OK</code> to save it.</p> <p></p> <p>Select an existing <code>Workflow</code> preset from the menu.</p> <p></p> <p>Remove a <code>Workflow</code> by selecting it from the menu, then clicking the minus button <code>-</code>.</p> <p></p> <p>To edit a <code>Workflow</code> preset,</p> <ol> <li>Select your preset</li> <li>Make your adjustments to settings</li> <li>Click the minus button <code>-</code> to remove the preset</li> <li>Click the plus button <code>+</code> and give the new preset the same name.  Click <code>OK</code>.</li> </ol> <p>Note</p> <p>This is more inconvenient than some kind of \"save\" button, but it keeps Transmogrifier's conventions more consistent with Blender because Blender approaches user presets in this manner.</p> <p></p>"},{"location":"batch_convert/#imports","title":"Imports","text":"<p>Click <code>+ Add Import</code> to add an import file format for Transmogrifier to search for.  Select your desired file format and associated user import preset.  Click on the folder icon and choose a <code>Directory</code> hierarchy containing your 3D models in the pop-up file dialog.</p> Supported 3D Formats <p>Transmogrifier supports importing and exporting the following 3D formats.</p> <ul> <li><code>FBX</code></li> <li><code>OBJ</code></li> <li><code>glTF</code>/<code>GLB</code></li> <li><code>STL</code></li> <li><code>PLY</code></li> <li><code>X3D</code></li> <li><code>DAE</code></li> <li><code>ABC</code></li> <li><code>USD</code>/<code>USDA</code>/<code>USDC</code>/<code>USDZ</code></li> <li><code>BLEND</code></li> </ul> Icons Explained Icon Name Description Remove Import Remove the import instance and related settings from the UI. Link Import Settings Synchronize import directories between all import file formats. Import Directory Parent directory to search through and import files.  Default of <code>//</code> will import from the same directory as the Blend file (only works if the Blend file is saved). <p></p>"},{"location":"batch_convert/#exports","title":"Exports","text":"<p>Click <code>+ Add Export</code> to add an export file format for Transmogrifier to output for each import file it finds.  Select your desired file format and associated user export preset.</p> Supported 3D Formats <p>Transmogrifier supports importing and exporting the following 3D formats.</p> <ul> <li><code>FBX</code></li> <li><code>OBJ</code></li> <li><code>glTF</code>/<code>GLB</code></li> <li><code>STL</code></li> <li><code>PLY</code></li> <li><code>X3D</code></li> <li><code>DAE</code></li> <li><code>ABC</code></li> <li><code>USD</code>/<code>USDA</code>/<code>USDC</code>/<code>USDZ</code></li> <li><code>BLEND</code></li> </ul> Icons Explained Icon Name Description Data Names from Objects Rename object data names according to their corresponding object names. Export Adjacent Export models adjacent to their respective imports. Overwrite Files Overwrite files of the given export format(s) that may already exist. Use Subdirectories Export models to their own subdirectories within the given export directory. Copy Original Contents Copy original contents of each import item's directory to each export item's subdirectory. Export Directory Directory to export files. Default of <code>//</code> will export to the same directory as the blend file (only works if the blend file is saved). <p></p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#200","title":"2.0.0","text":""},{"location":"changelog/#new-features","title":"New Features","text":"<ul> <li>New UI</li> <li>Edit Textures Presets</li> <li>Custom Scripts (inspired by #7)</li> <li>Conversion Summary CSV</li> <li>Load preset from file<ul> <li>Workflows</li> <li>Edit Textures</li> </ul> </li> <li>Asset Quality</li> </ul>"},{"location":"changelog/#optimizations","title":"Optimizations","text":"<ul> <li>Imports<ul> <li>Multiple import formats are now possible</li> <li>Link settings</li> </ul> </li> <li>Exports<ul> <li>Multiple export formats are now possible</li> <li>Link settings</li> </ul> </li> <li>Overhauled Batch Conversion Algorithm</li> <li>Improved Auto-Optimize logic with respect to overwriting files</li> <li>API/Add-on conventions better follow Blender's best practices</li> <li>Improved string formatting</li> </ul>"},{"location":"changelog/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fixed Blend files being overwritten when marking assets.  Asset Blend files now have an \"_Assets\" suffix</li> <li>Auto-Optimize File Size now works for every export format/instance, not just the first one</li> <li>Exports' presets and extensions are no longer linked</li> <li>Fixed Workflow's <code>+</code> Add Preset, which would throw an error if a <code>transmogrifier</code> operator preset directory did not already exist. #13</li> <li>Relative paths now work as expected when Blend file is saved</li> <li>Fixed a number of bugs resulting from new features</li> </ul>"},{"location":"changelog/#documentation","title":"Documentation","text":"<ul> <li>Overhauled README.md</li> <li>Created new documentation website</li> </ul>"},{"location":"changelog/#150","title":"1.5.0","text":""},{"location":"changelog/#new-features_1","title":"New Features","text":"<ul> <li>Blend I/O</li> <li>Simple/Advanced UI</li> <li>Archive Assets</li> </ul>"},{"location":"changelog/#optimizations_1","title":"Optimizations","text":"<ul> <li>Improved context overrides with new convention.</li> <li>Replaced \"Save Preview\" viewport render with extracted asset preview images.</li> </ul>"},{"location":"changelog/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>Fixed objects not transforming around the 3D Cursor.</li> <li>Fixed messy nodes resulting from adaptation of Node Wrangler's \"Add Principled Setup\".</li> <li>Fixed Custom textures source bug that had resulted in not preserving materials/textures when a model imported with materials of the same name.</li> <li>A number of bugs resulting from new features.</li> </ul>"},{"location":"changelog/#documentation_1","title":"Documentation","text":"<ul> <li>Updated screenshots.</li> <li>Added documentation for new features.</li> <li>Revised texture Rule No. 3.</li> </ul>"},{"location":"changelog/#140","title":"1.4.0","text":""},{"location":"changelog/#new-features_2","title":"New Features","text":"<ul> <li>GNU/Linux support</li> <li>OpenEXR support</li> <li>Export UVs</li> <li>Rename UVs</li> <li>PolyHaven demo files (see attached)</li> </ul>"},{"location":"changelog/#optimizations_2","title":"Optimizations","text":"<ul> <li>Rewrote pathing to use Python's pathlib instead of os.path</li> <li>Organized UI into sections</li> </ul>"},{"location":"changelog/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Fixed auto-texture resize/reformat failing for custom textures</li> <li>Fixed a variety of bugs resulting from the pathlib pathing rewrite.</li> </ul>"},{"location":"changelog/#documentation_2","title":"Documentation","text":"<ul> <li>Added new screenshots</li> <li>Added \"UVs\" and \"Demo\" sections</li> </ul>"},{"location":"changelog/#131-hotfix1","title":"1.3.1-hotfix.1","text":""},{"location":"changelog/#new-features_3","title":"New Features","text":"<ul> <li>N/A</li> </ul>"},{"location":"changelog/#optimizations_3","title":"Optimizations","text":"<ul> <li>N/A</li> </ul>"},{"location":"changelog/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Hotfixed major bug in \"Custom\" textures scenario. <ul> <li>This bug was missed because save_blend &amp; keep_textures_temp settings were turned on during testing, which had preserved custom textures and materials. However, it was discovered that when these settings were turned off, custom textures &amp; materials were getting deleted after the first item converted. This was due to 1) no fake users getting set, 2) fake users getting removed, and 3) purge orphans happening for every item converted. Custom materials &amp; textures are now preserved throughout the conversion </li> </ul> </li> </ul>"},{"location":"changelog/#documentation_3","title":"Documentation","text":"<ul> <li>N/A</li> </ul>"},{"location":"changelog/#131","title":"1.3.1","text":""},{"location":"changelog/#new-features_4","title":"New Features","text":"<ul> <li>N/A</li> </ul>"},{"location":"changelog/#optimizations_4","title":"Optimizations","text":"<ul> <li>For \"External\" and \"Custom\" textures scenarios with multiple texture sets, material names strings in object names can now exist anywhere in the objects' names, no longer only as prefixes. (Adds flexibility)</li> <li>For \"Custom\" textures scenario, only import/resize/reformat once. (Speeds up conversion)</li> <li>Rewrote packed textures algorithm. (Adds more flexibility &amp; improves reliability)</li> <li>Improved material assignment algorithm.</li> <li>Improved material creation algorithm.<ul> <li>Only create transparent material if opacity map is present.</li> </ul> </li> <li>Tidied up extraneous logging outputs</li> <li>Rewrote PBR tag regex dictionaries<ul> <li>Ignore capitalization</li> <li>Require exact matches/prohibit keys from being substrings in a given component string when texture names are split into components by common separators for regexing.<ul> <li>(e.g. regexing \"MetalGalvanized_nrml_4K.png\" used to return \"Metallic_Normal_4K.png\", but now it correctly returns \"MetalGalvanized_Normal_4K.png\")</li> </ul> </li> <li>Re-introduced 3-letter/abbreviated PBR tag regex keys</li> </ul> </li> </ul>"},{"location":"changelog/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>Fixed occlusion maps not getting resized/reformatted.</li> <li>Fixed bug where if there was a single mesh object in the scene but multiple texture sets had been imported, material assignment would fail.</li> <li>\"Alpha Clip\" blend mode is now set for materials assigned to objects with \"cutout\" instead of \"transparent\" in their names. </li> </ul>"},{"location":"changelog/#documentation_4","title":"Documentation","text":"<ul> <li>N/A</li> </ul>"},{"location":"changelog/#130","title":"1.3.0","text":""},{"location":"changelog/#new-features_5","title":"New Features","text":"<ul> <li>Workflow Presets</li> </ul>"},{"location":"changelog/#optimizations_5","title":"Optimizations","text":"<ul> <li>Converted many hard-code to dynamic-code.</li> <li>Made \"Copy Assets to Preferences\" a proper operator button.</li> </ul>"},{"location":"changelog/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>Removed 3-character regex keys, which were too aggressive .</li> <li>(e.g. the key \"[Ss]ss was turning textures/materials called \"StainlessSteel\" into \"Subsurface\")</li> <li>Fixed many bugs arising from dynamic-code optimizations (see commits for specifics).</li> <li>Fixed other minor bugs (see commits for specifics).</li> </ul>"},{"location":"changelog/#documentation_5","title":"Documentation","text":"<ul> <li>Improved texture convention documentation.</li> <li>Included documentation for Workflows.</li> </ul>"},{"location":"changelog/#120","title":"1.2.0","text":""},{"location":"changelog/#new-features_6","title":"New Features","text":"<ul> <li>Rename all UV Maps to \"UVMap\"</li> <li>Custom output directory</li> <li>Place exports in subdirectories within custom output directory</li> <li>Copy original files into each respective subdirectory</li> </ul>"},{"location":"changelog/#optimizations_6","title":"Optimizations","text":"<ul> <li>Improve regex PBR tag keys</li> <li>Reorganized UI</li> <li>Made UI more compact</li> <li>Created functions from some existing code blocks</li> </ul>"},{"location":"changelog/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>A variety of bugs from regex to custom output directory features. See commits for specifics.</li> </ul>"},{"location":"changelog/#documentation_6","title":"Documentation","text":"<ul> <li>Added many new diagrams and screenshots</li> <li>Improved explanations</li> <li>Made a logo</li> </ul>"},{"location":"changelog/#110","title":"1.1.0","text":"<ul> <li>Updated to Blender 3.6 and remade export presets. </li> <li>Rewrote Auto Resize algorithm.</li> <li> <p>Added menu for choosing what to auto-resize.</p> </li> <li> <p>Added new method options:</p> <ul> <li>Resize Textures minimum resolution.</li> <li>Decimate Meshes max number of decimation iterations.</li> </ul> </li> </ul>"},{"location":"changelog/#100","title":"1.0.0","text":"<p>Initial release of the Transmogrifier addon for Blender.</p> <ul> <li>Wrote documentation for README.md</li> <li>Uploaded initial files.</li> </ul>"},{"location":"community/","title":"Community","text":""},{"location":"community/#join-the-conversation","title":"Join the Conversation","text":""},{"location":"community/#blenderartists","title":"BlenderArtists","text":"<p>Get help, share <code>Workflow Presets</code>, and talk about everything Transmogrifier.</p> <p>Join BlenderArtists</p>"},{"location":"community/#social-media","title":"Social Media","text":"<p>If you find Transmogrifier useful, please share it on your favorite social media with <code>#transmogrifier</code> and <code>#b3d</code>!</p>"},{"location":"community/#report-a-bug","title":"Report a Bug","text":"<p>If Transmogrifier isn't working the way you expected, please let us know by submitting an issue on Github or reaching out on BlenderArtists.</p> <p>Report Bug</p>"},{"location":"community/#contribute","title":"Contribute","text":"<p>We welcome any help maintaining Transmogrifier.  </p> <ul> <li>Issue Tracker</li> <li>Source Code</li> </ul>"},{"location":"community/#credits","title":"Credits","text":"<p>Many thanks to the people who develop Blender, without whom this addon would have no foundation to exist!</p> <p>Transmogrifier used code from the following repositories in the following ways. If you give a star to this repository, please also do the same for theirs!</p> <ul> <li> <p>Transmogrifier's GUI and operators were originally based on MrTriPie's excellent Blender addon, Blender Super Batch Export (GPL-v3). </p> </li> <li> <p>Some additional code snippets have been adapted into Transmogrifier from the following repositories (search for their names in Transmogrifier's repository to view the specific adaptations):</p> <ul> <li>Simple Renaming Panel</li> <li>Node Wrangler</li> <li>asset_browser_utilities</li> </ul> </li> </ul>"},{"location":"export_uv_maps/","title":"Export UV Maps","text":"<p>Export UVs with the same options available via the UV Editor and more.</p> <p></p>"},{"location":"export_uv_maps/#destination","title":"Destination","text":"<p>Set a location for UV's to be exported into.</p> <p></p> <code>Textures</code> <code>UV</code> <code>Model</code> <code>Custom</code> Export UVs to a Textures subfolder for each item. If none exists, it creates one. Export UVs to a 'UV' subfolder for each item. If none exists, it creates one. Export UVs adjacent to each respective import file. Export all UVs to a custom directory of choice."},{"location":"export_uv_maps/#combination","title":"Combination","text":"<p>Set how UVs should be combined for export.</p> <p></p> <code>All</code> <code>Object</code> <code>Material</code> Export all UVs together Export UVs by object Export UVs by material 1 UV layout per converted model 1 UV layout per object 1 UV layout per material"},{"location":"export_uv_maps/#image-settings","title":"Image Settings","text":"<p>Adjust the image <code>Resolution</code>, <code>Format</code>, and <code>Fill Opacity</code>.</p>"},{"location":"export_uv_maps/#rename-uvs","title":"Rename UVs","text":"<p>Synchronize UV map names among every mesh object with a custom name.</p> <p>Multiple UV maps within the same object will increment, for example, as 'UVMap', 'UVMap_1', 'UVMap_2', and so on. </p> <p>Example</p> <p>Some model files contain mesh objects made in different DCC apps.  Maya, Max, Blender, Modo, etc. use different conventions for naming UV channels.  The difference in channel names can cause errors for certain export formats, which is the reason this feature exists.</p> <p>USD files and UV Maps</p> <p><code>Rename UVs</code> prevents a bug in USD formats when two or more objects share the same material but have different UV map names, which causes some objects to appear untextured.</p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"Do I have to import my first model into my Blender scene before Batch Converting? What is Transmogrifier's license? Where is Transmogrifier installed on my computer? My <code>Workflow Presets</code> don't work anymore. Something's not working.  Where do I submit a bug report? How do I create an import or export preset? How do I update Transmogrifier? How do I uninstall Transmogrifier? How do I create an Asset Library? How do I create Asset Catalogs? How do I make a <code>Custom Script</code> for Transmogrifier? Where are log files output? Why are there so many icon buttons without descriptions?"},{"location":"faq/#do-i-have-to-import-my-first-model-into-my-blender-scene-before-batch-converting","title":"\"Do I have to import my first model into my Blender scene before Batch Converting?\"","text":"<p>No.  Transmogrifier imports and exports files via a new Blender session/window every time you batch convert, so your current scene isn't affect nor does it need any preparation.</p>"},{"location":"faq/#what-is-transmogrifiers-license","title":"\"What is Transmogrifier's license?\"","text":"<p>Transmogrifier is open-source/licensed-free software under the GNU GPL v3.0.</p> What is Free Software? <p>' \u201cFree software\u201d means software that respects users' freedom and community. Roughly, it means that the users have the freedom to run, copy, distribute, study, change and improve the software. Thus, \u201cfree software\u201d is a matter of liberty, not price. To understand the concept, you should think of \u201cfree\u201d as in \u201cfree speech,\u201d not as in \u201cfree beer.\u201d ' - GNU.org</p>"},{"location":"faq/#where-is-transmogrifier-installed-on-my-computer","title":"\"Where is Transmogrifier installed on my computer?\"","text":"<p>The location of Transmogrifier's files is dependent upon your operating system and your Blender installation.</p> <p>Tip</p> <p><code>X.XX</code> refers to your Blender version.  For example, <code>3.6</code>.</p> <p>Transmogrifier's Location</p> GNU/LinuxMacWindows <p>If you installed the add-on as a user:</p> <pre><code>~/.config/blender/X.XX/scripts/addons/Transmogrifier/\n</code></pre> <p>If you installed the add-on system-wide: (1)</p> <ol> <li>This may also depend on your Linux distribution</li> </ol> <pre><code>/usr/share/blender/X.XX/scripts/addons/Transmogrifier/\n</code></pre> <p>If you installed the add-on as a user:</p> <pre><code>/Users/{YOUR_USER}/Library/Application Support/Blender/X.XX/scripts/addons/Transmogrifier/\n</code></pre> <p>If you installed the add-on system-wide:</p> <pre><code>/Library/Application Support/Blender/X.XX/scripts/addons/Transmogrifier/\n</code></pre> <p>On Windows:</p> <pre><code>C:\\Users\\{YOUR_USER}\\AppData\\Roaming\\Blender Foundation\\X.XX\\scripts\\addons\\Transmogrifier\\\n</code></pre> <p>Transmogrifier <code>Workflow Presets</code> Location</p> GNU/LinuxMacWindows <p>If you installed the add-on as a user:</p> <pre><code>~/.config/blender/X.XX/scripts/presets/operator/transmogrifier\n</code></pre> <p>If you installed the add-on system-wide: (1)</p> <ol> <li>This may also depend on your Linux distribution</li> </ol> <pre><code>/usr/share/blender/X.XX/scripts/presets/operator/transmogrifier\n</code></pre> <p>If you installed the add-on as a user:</p> <pre><code>/Users/{YOUR_USER}/Library/Application Support/Blender/X.XX/scripts/presets/operator/transmogrifier\n</code></pre> <p>If you installed the add-on system-wide:</p> <pre><code>/Library/Application Support/Blender/X.XX/scripts/presets/operator/transmogrifier\n</code></pre> <p>On Windows:</p> <pre><code>C:\\Users\\{YOUR_USER}\\AppData\\Roaming\\Blender Foundation\\X.XX\\scripts\\presets\\operator\\transmogrifier\n</code></pre> <p>Transmogrifier <code>Edit Textures Presets</code> Location</p> GNU/LinuxMacWindows <p>If you installed the add-on as a user:</p> <pre><code>~/.config/blender/X.XX/scripts/presets/operator/transmogrifier/edit_textures\n</code></pre> <p>If you installed the add-on system-wide: (1)</p> <ol> <li>This may also depend on your Linux distribution</li> </ol> <pre><code>/usr/share/blender/X.XX/scripts/presets/operator/transmogrifier/edit_textures\n</code></pre> <p>If you installed the add-on as a user:</p> <pre><code>/Users/{YOUR_USER}/Library/Application Support/Blender/X.XX/scripts/presets/operator/transmogrifier/edit_textures\n</code></pre> <p>If you installed the add-on system-wide:</p> <pre><code>/Library/Application Support/Blender/X.XX/scripts/presets/operator/transmogrifier/edit_textures\n</code></pre> <p>On Windows:</p> <pre><code>C:\\Users\\{YOUR_USER}\\AppData\\Roaming\\Blender Foundation\\X.XX\\scripts\\presets\\operator\\transmogrifier\\edit_textures\n</code></pre>"},{"location":"faq/#my-workflow-presets-dont-work-anymore","title":"\"My <code>Workflow Presets</code> don't work anymore.\"","text":"<p>Transmogrifier's codebase (API) was overhauled for version 2.0.0, so any <code>Workflow Presets</code> you made prior to this release won't work anymore.  Your import and export presets should still work, however.</p>"},{"location":"faq/#somethings-not-working-where-do-i-submit-a-bug-report","title":"\"Something's not working.  Where do I submit a bug report?\"","text":"<p>If Transmogrifier isn't working the way you expected, please let us know by submitting an issue on Github or reaching out on BlenderArtists.</p> <p>Report Bug</p>"},{"location":"faq/#how-do-i-create-an-import-or-export-preset","title":"\"How do I create an import or export preset?\"","text":"<p>You can make your own import and export presets in the pop-up dialog box of the given format you are import or exporting.  </p> <p>Example</p> <p>For example, let's say you want to create a glTF export preset.</p> <ol> <li> <p>Navigate to <code>File &gt; Export</code> menu and click <code>glTF 2.0 (.glb/.gltf)</code>.</p> </li> <li> <p>Adjust your glTF export settings in the panel on the right.</p> </li> <li> <p>Now that you have made your adjustments to the export settings, click the <code>+</code> button to save them to a new preset. </p> </li> <li> <p>Name your preset, then click <code>OK</code>.</p> </li> </ol> <p>Success! You have now created your own export preset.</p> <p>Import presets work the same way.</p> <p> </p> <p>Note</p> <p>Blender doesn't support presets for some import and export formats.  We are unsure why!</p>"},{"location":"faq/#how-do-i-update-transmogrifier","title":"\"How do I update Transmogrifier?\"","text":"<p>Check out the Update \ud83d\udd01 page.</p>"},{"location":"faq/#how-do-i-uninstall-transmogrifier","title":"\"How do I uninstall Transmogrifier?\"","text":"<p>Check out the Uninstall \ud83d\udd0c page.</p>"},{"location":"faq/#how-do-i-create-an-asset-library","title":"\"How do I create an Asset Library?\"","text":"<p>Open Blender, then navigate to <code>Edit &gt; Preferences</code>.</p> <p></p> <p>Then click <code>File Paths</code> and scroll down to the <code>Asset Libraries</code> section. </p> <p>Success</p> <p>Now you should see your new library availabe in your <code>Assets &gt; Storage &gt; Library</code> menu.</p> <p></p> <p>Info</p> <p>For more information about Asset Libraries, check out Blender's documentation.</p>"},{"location":"faq/#how-do-i-create-asset-catalogs","title":"\"How do I create Asset Catalogs?\"","text":"<p>This is a bit less intuitive than creating an Asset Library.  </p> <ol> <li> <p>Open a new Blender session.</p> </li> <li> <p>Split the view and change the panel to the <code>Asset Browser</code>.</p> </li> <li> <p>Select your desired asset library from the menu.</p> </li> <li> <p>Click the <code>+</code> button to add an <code>Asset Catalog</code>.  Add and rename as many asset catalogs and sub-catalogs as you wish.</p> </li> </ol> <p>Warning</p> <p>Your changes to the <code>Asset Library</code>'s Catalogs are not saved yet.  Don't close Blender.</p> <ol> <li>Now save the current Blender session inside your <code>Asset Library</code> as something like <code>blender_assets.cats.blend</code>. </li> </ol> <p>Tip</p> <p>The name of your Blender file doesn't matter.  We only suggest to save it with the title <code>blender_assets.cats.blend</code> for the sake of consistency, since Asset Catalogs are stored in a <code>.txt</code> file stored in your Asset Library directory as <code>blender_assets.cats.txt</code>.</p> <ol> <li>Now, whenever you want to add/edit/remove new catalogs, open <code>blender_assets.cats.blend</code>, make your changes, and save the file again.</li> </ol> <p></p> <p>You have now created Asset Catalogs.</p> <p>They should now be visible in Transmogrifier's <code>Assets &gt; Storage &gt; Library</code> menu.</p> <p></p>"},{"location":"faq/#how-do-i-make-a-custom-script-for-transmogrifier","title":"\"How do I make a <code>Custom Script</code> for Transmogrifier?\"","text":"<p>Creating custom scripts is easy for developers and non-developers alike.  </p> <ol> <li> <p>Open Blender and navigate to the <code>Scripting</code> tab.</p> </li> <li> <p>Click <code>+ New</code> in the Text Editor to create a new text data-block.</p> </li> <li> <p>If you know Python for Blender, you can write your script.  It doesn't have to be anything fancy.  Pythonic conventions, such as adding functions and commenting your code, are recommended but not required.  </p> BasicBetter <pre><code># Add_Monkey_and_Shade_Flat.py\n\nbpy.ops.object.select_all(action='DESELECT')\nbpy.ops.mesh.primitive_monkey_add(size=2, enter_editmode=False, align='WORLD', location=(0, 0, 0), scale=(0.01, 0.01, 0.01))\nbpy.ops.object.select_all(action='SELECT')\nbpy.ops.object.shade_flat()\n</code></pre> <pre><code># Add_Monkey_and_Shade_Flat.py\n\n# Add a monkey to the scene.\ndef add_monkey():\n    bpy.ops.object.select_all(action='DESELECT')\n    bpy.ops.mesh.primitive_monkey_add(size=2, enter_editmode=False, align='WORLD', location=(0, 0, 0), scale=(0.01, 0.01, 0.01))\n\n# Shade all objects with flat shading.\ndef shade_flat():\n    bpy.ops.object.select_all(action='SELECT')\n    bpy.ops.object.shade_flat()\n\n# Add monkey and shade flat.\nadd_monkey()\nshade_flat()\n</code></pre> </li> <li> <p>Save your code as a Python (<code>.py</code>) file.</p> </li> </ol> <p>Success!</p> <p>Now you can add your Python recipe as a custom script for Transmogrifier to execute during conversion.</p> <p>New to Python?</p> <p>If you're new to Python programming, don't worry!  You can discover and copy many commands directly from the Blender's user interface.  </p> <p>For example, if you wanted to find the command for adding a Monkey to your scene, simply add the monkey graphically, open the <code>Info</code> panel, copy the monkey's Python command, and paste it into your script.</p> <p></p>"},{"location":"faq/#where-are-log-files-output","title":"\"Where are log files output?\"","text":"<p>Log files are stored inside the <code>Imports &gt; Directory</code> (or in each of the <code>Directory</code> of each import box if you have multiple imports whose settings are not linked).</p> When Import Settings are Linked When Import Settings are Unlinked"},{"location":"faq/#why-are-there-so-many-icon-buttons-without-descriptions","title":"\"Why are there so many icon buttons without descriptions?\"","text":"<p>Transmogrifier is a robust suite of tools for batch converting 3D files.  As we added more and more features, its user interface grew longer and longer.  Thus, we overhauled the UI in version 2.0.0 to make it more compact.  We replaced a lot of the prior checkboxes that had names with icon-only buttons and shoved them in the top-right of each relevant box, which made a lot of room for everything else.    </p>"},{"location":"features_overview/","title":"Overview","text":"<p>Transmogrifier includes an extensive suite of tools for non-destructively converting 3D files and associated textures into other formats.</p> Fresh Start...some initial adjustments......the entire toolset Transmogrifier begins with a small portion of its settings visible. <p></p> More features become apparent when adjusting some basic settings. <p></p> Many more features are available for advanced batch conversions! <p></p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"general_usage/","title":"General Usage \ud83c\udfed","text":"<p>The following steps outline the basic approach for any given batch conversion.</p> 1. Adjust Settings2. Check the <code>Forecast</code>3. Click <code>Batch Convert</code>4. Verify Conversion <p>Add import formats to search for and export formats to output.  Choose among many utilities for optimizing file size, adding files to an asset library, and more.</p> Save your Settings <p>To save your current Transmogrifier settings for later use, you can either </p> <ul> <li>Add a <code>Workflow Preset</code>, or</li> <li>Save the current Blender session.</li> </ul> a. <code>Add Import</code>b. <code>Add Export</code>c. Set Additional Options <p>Click <code>+ Add Import</code> to add an import file format for Transmogrifier to search for.  Select your desired file format and associated user <code>import preset</code>.  Click on the folder icon and choose a <code>Directory</code> hierarchy containing your 3D models in the pop-up file dialog.</p> <p></p> <p>Click <code>+ Add Export</code> to add an export file format for Transmogrifier to output for each import file it finds.  Select your desired file format and associated user <code>export preset</code>. </p> <p>Tip</p> <p>If you want to export models to a specific output folder instead of adjacent to each respective import file, toggle of the <code>Export Adjacent</code> button . This will cause a new <code>Directory</code> input to appear.  Click on the folder icon and choose a <code>Directory</code> into which your converted models will be output.</p> <p></p> <p>There are many other features available in Transmogrifier.  You can modify textures on-the-fly, auto-optimize exports' file sizes, add models to an asset library, and more!</p> <p>Tip</p> <p>Check out the Features page for an in-depth exploration of each setting.</p> <p></p> <p>Click the <code>Forecast</code> button to predict the batch conversion.</p> <p></p> <p>Finally, click <code>Batch Convert</code> and let the process run.</p> <p>Info</p> <p>After this button is clicked, a second Blender window will pop-up.  This window will be greyed-out, and both this and the original Blender window will remain unresponsive until the batch conversion is over.  This is normal operation.  After the conversion finishes, the greyed-out Blender window will disappear and the original Blender instance will report how many files were converted. If you wish to see the conversion process get logged in real-time, you must start Blender from your terminal/Command Line first before Transmogrifying.</p> <p></p> <p>When the batch conversion finishes, you should now be able to find the same number of export files as Transmogrifier predicted in the <code>Forecast</code>.  You can verify the conversion manually or by reviewing the <code>Conversion Summary</code> CSV file .</p> <p></p> <p>That's the jist of how Transmogrifier works.</p>"},{"location":"installation/","title":"Installation \ud83d\udce5","text":""},{"location":"installation/#1-download-and-install-blender","title":"1. Download and install Blender","text":"<p>Blender is a cross-platform, licensed-free 3D content creation software developed by people all over the world.  </p> <p>Download Blender 3.6 LTS</p> Why LTS? <p>Transmogrifier is developed specifically for long-term support (LTS) versions of Blender.  These are branches of the software which receive optimizations and stability improvements over 2-year cycles.  We develop Transmogrifier for Blender LTS because it reduces our having to play \"catch-up\" with incremental changes to Blender's API, thus allowing us to focus more on developing the add-on itself.  </p> <p>Transmogrifier may work on non-LTS versions &gt;3.6, but this is not guaranteed.</p>"},{"location":"installation/#2-download-the-transmogrifier-add-on","title":"2. Download the Transmogrifier Add-on","text":"<p>The Transmogrifier add-on extends Blender with a 3D batch conversion toolset.</p> <p>Download Transmogrifier</p> <p>Tip</p> <p>A good, default place to save is your <code>Downloads</code> directory.  You do not need to unzip the file.  In the next step, you'll install it as a zipped file.</p>"},{"location":"installation/#3-install-the-transmogrifier-add-on","title":"3. Install the Transmogrifier Add-on","text":"<ol> <li> <p>Open Blender, then navigate to <code>Edit &gt; Preferences</code>.</p> <p></p> </li> <li> <p>Select the <code>Add-ons</code> tab, and press <code>Install\u2026</code> on the top right. Navigate to the .zip you downloaded in Step 2, and press <code>Install Add-on</code>.</p> <p></p> <p>Warning</p> <p>You do not need to unzip the add-on file. You should install it as a zipped file.</p> </li> <li> <p>You should now see <code>Import-Export: Transmogrifier</code> available in your add-ons list. Enable the add-on by clicking the checkbox.</p> <p></p> </li> </ol>"},{"location":"installation/#4-choose-add-on-location","title":"4. Choose Add-on Location","text":"<p>Transmogrifier can be conveniently displayed in different places within Blender's user interface.</p> <p></p> <p><code>Addon Location</code> Screenshots</p> <code>Top Bar</code> <code>3D Viewport Header</code> <code>3D Viewport Side Panel</code> Good location for Basic usage Good location for Basic usage Good location for Basic usage / Best location for Advanced usage"},{"location":"installation/#5-install-example-presets","title":"5. Install example presets","text":"<p>Transmogrifier comes with some example presets for its own settings and for importing and exporting certain formats.  You may copy them to your user preferences by clicking <code>Install Example Presets</code>.</p> <p>Tip</p> <p>This is highly recommended for beginners to Transmogrifier and for those who rely on these presets and desire to keep them updated with each new Transmogrifier version.</p> <p></p> <p>Success!  Transmogrifier is now installed.</p>"},{"location":"log_conversions/","title":"Log Conversions","text":"<p>It can be difficult to verify the success of a batch conversion apart from individually combing through your converted files.  Logging your batch conversions allows you to review them with a batch approach as well.  The <code>Conversion Summary</code> and <code>Conversion Log</code> solve this tedious task.</p> <p></p>"},{"location":"log_conversions/#conversion-summary","title":"Conversion Summary","text":"<p>Save a  <code>Conversion Summary</code> as a <code>CSV</code> file of the batch conversion in the given import directories. The summary records statistics about each model converted.</p> <p></p>"},{"location":"log_conversions/#statistics","title":"Statistics","text":"<p>The <code>Conversion Summary</code> allows you filter which statistics to document in the CSV output. (1) </p> <ol> <li><code>Import File</code>, <code>Import Format</code>, <code>Export File</code>, and <code>Export Format</code> are always logged.</li> </ol> Statistic Description <code>Date</code> The date and time at which each model is converted <code>Import File</code> The name of the import file with the file suffix <code>Import Format</code> The import file's 3D format abbreviation <code>Export File</code> The name of the export file with the file suffix <code>Import Format</code> The export file's 3D format abbreviation <code>File Size</code> Exports' file sizes and comparison to the target threshold <code>Dimensions</code> Exports' dimensions and comparison with the target dimensions <code>Objects</code> Object count and names in each exported model <code>Polycount</code> Number of vertices, edges, faces, and triangles in each exported model <code>Materials</code> Number and names of materials applied to each exported model <code>Textures</code> Number and names of the textures applied to each exported model <code>File Path</code> File path of each exported model"},{"location":"log_conversions/#compare-file-size","title":"Compare File Size","text":"<p>Compare each export file's filesize against the <code>Target</code> threshold. (1)</p> <ol> <li>This setting is synchronized between the <code>Auto-Optimize Files</code> box and the <code>Logging</code> box.</li> </ol> <ul> <li>If <code>export file size</code> &gt; <code>target file size</code>, then a <code>\ud83d\udd3a</code> will be recorded.</li> <li>If <code>export file size</code> &lt; <code>target file size</code>, then a <code>\u2705</code> will be recorded.</li> </ul>"},{"location":"log_conversions/#compare-dimensions","title":"Compare Dimensions","text":"<p>Compare each export file's dimensions against a bounding box of dimensions you specify.</p> <ul> <li>If <code>export file dimensions</code> &gt; <code>bounding box dimensions</code>, then a <code>\ud83d\udd3a</code> will be recorded.</li> <li>If <code>export file dimensions</code> &lt; <code>bounding box dimensions</code>, then a <code>\u2705</code> will be recorded.</li> </ul>"},{"location":"log_conversions/#conversion-log","title":"Conversion Log","text":"<p>Save a  <code>Conversion Log</code> of the batch conversion as a <code>TXT</code> file in the given import directories. The log records each step of the conversion process, which is invaluable for troubleshooting conversion errors and bugs.</p> <p>Tip</p> <p>To quickly verify that no errors occured during the batch conversion, open the log file, <code>Ctrl + F</code> to search for a string of text, and type \"<code>error</code>\".  If no results are found, then Transmogrifier encountered no errors during the conversion process.</p> <p></p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"mark_assets/","title":"Mark Assets","text":"<p>Have you ever tried to build your own 3D asset library?</p> <p>Whether it's for your personal projects or production pipeline, Transmogrifier can populate a library with dozens of your 3D assets in mere minutes!</p> <p>Blender has a powerful Asset Library system built into the core of its codebase.  Transmogrifier leverages its capabilities while batch converting to add your 3D models and textures to your own asset library and catalog of choice.</p> <p></p>"},{"location":"mark_assets/#asset-quality","title":"Asset Quality","text":"<p>Set the quality of the Blend files containing assets. </p> <p>Quality is based on the point when asset Blend files are saved during each item's conversion (i.e. before/after textures are resized/reformatted and meshes are decimated). </p> <p>Note</p> <p>If <code>Edit Textures</code> is toggled off and <code>Auto-Optimize Files</code> is toggled off, asset Blend files will always save at the highest regardless of this menu's selection. </p> <p>If you want to run a script before an asset Blend is saved, select <code>Most Optimized</code>.</p> <code>Highest Fidelity</code> <code>Balanced</code> <code>Most Optimized</code> Mark assets before textures are edited according the 'Edit Textures' menu Mark assets after textures are edited according the 'Edit Textures' menu but before meshes and/or textures are automatically optimized according to the 'Auto-Optimize Files' menu Mark assets after meshes and/or textures are automatically optimized according to the 'Auto-Optimize Files' menu. Select this option for the highest quality asset Blend files. Select this option for medium-quality asset Blend files. Select this option for lower-quality asset Blend files."},{"location":"mark_assets/#mark-assets_1","title":"Mark Assets","text":"<p>Select asset types to mark.</p> <p></p> <p>Asset Types</p> <p>| <code>Actions</code> | <code>Collections</code> | <code>Materials</code> | <code>Node Trees</code> | <code>Objects</code> | <code>Worlds</code> |</p>"},{"location":"mark_assets/#object-types","title":"Object Types","text":"<p>Filter which object types to mark as assets. (1)</p> <ol> <li>Some object types will not be able to have preview images generated for them.</li> </ol> <p>Object Types</p> <p>| <code>Mesh</code> | <code>Surface</code> | <code>Text</code> | <code>Armature</code> | <code>Light</code> | </p> <p>| <code>Curve</code> | <code>Metaball</code> | <code>Grease Pencil</code> | <code>Emtpy</code> | <code>Camera</code> |</p>"},{"location":"mark_assets/#metadata","title":"Metadata","text":"<p>Add metadata that will be applied to all types of assets marked in every asset Blend file saved during the conversion.</p> <p></p>"},{"location":"mark_assets/#allow-duplicates","title":"Allow Duplicates","text":"<p>Filter which asset types can have duplicates be marked when assets of those types already exist in the selected asset library.</p> <p></p>"},{"location":"mark_assets/#storage","title":"Storage","text":"<p>Select where to store asset Blend files and into what catalog to organize them.</p> <p>Blend textures</p> <p>You have the option of how asset textures are stored with respect to the Blend file.</p> <ul> <li>Packed</li> <li>Unpacked<ul> <li>Relative paths</li> <li>Absolute paths</li> </ul> </li> </ul> <p></p>"},{"location":"mark_assets/#save-previews","title":"Save Previews","text":"<p>Extract asset previews as image thumbnails, saved adjacent to each respective import file.</p> <p></p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"optimize_file_size/","title":"Auto-Optimize File Size","text":"<p>Need to optimize files for AR? VR? Web? Games?</p> <p>Transmogrifier has a toolset for automatically reducing file size with texture- and mesh-optimizing features!</p> <p>Perform automatic file-optimization methods that are adaptive to every model in order reduce exports' file sizes below a custom target threshold. </p> <p>Tip</p> <p>This feature adapts to each model, meaning that Transmogrifier iteratively reduces an export's file size only inasmuch as required to \"sneak\" below the target threshold.  This allows you to always have each individual export exist at its maximum allowable quality within the limit you set.</p> <p></p>"},{"location":"optimize_file_size/#target","title":"Target","text":"<p>Set a target threshold below which Transmogrifier should attempt to adaptively reduce each export files' size (in <code>Megabytes</code>).  </p>"},{"location":"optimize_file_size/#overwrite-files","title":"Overwrite Files","text":"<p>If you elected to <code>Overwrite Exports</code> in the <code>Exports</code> box above, then you have the option to overwrite <code>All</code> existing export files or overwrite export files <code>Only Above Target</code>.  </p> <p>How is this helpful?</p> <p>Sometimes a batch conversion with auto-optimize can still yield some exports with file sizes above the target threshold.  This allows you to focus on re-batch-converting only the few outliers that need extra optimization.</p> <p>Example</p> <ul> <li> <p>Let's say that out of <code>100</code> models converted, <code>5</code> models are still above a target of <code>15MB</code>.  </p> <ul> <li>Let's also say that batch took <code>7min.</code> to process,</li> <li>but you absolutely have to have all <code>100</code> models below <code>15MB</code>.</li> </ul> </li> <li> <p>You have two options:</p> Overwrite <code>All</code> \ud83d\udc22 Overwrite <code>Only Above Target</code> \ud83d\udc07 Adjust your auto-optimize settings, re-batch-convert, and wait another <code>7min.</code> for the <code>100</code> models to convert all over again when <code>95</code> didn't need to. Adjust your auto-optimize settings, then <code>Only Above Target</code> will only re-batch-convert those <code>5</code> files in, say, <code>20sec.</code>.  You just saved about <code>6.5min.</code>! </li> </ul>"},{"location":"optimize_file_size/#methods","title":"Methods","text":"<p>Choose among texture- and mesh-optimization methods to use.</p> Method Description Adjustment Draco Try activating Draco compression for exported models. (Only works for <code>glTF</code>/<code>GLB</code> files). Draco compression level Resize textures Set minimum image texture resolution for auto file size not to go below. Images will not be upscaled. Resolution Reformat textures Try reformatting all textures except the normal map to JPEG's to lower the exported file size. Include Normal Maps (usually avoided because JPG compression causes artifacts in normal maps) Decimate Try decimating objects to lower the exported file size (Uses edge collapse at a 50% ratio each time. Set a maximum decimate iteration). Decimate iteration limit <p>Decimate Warning</p> <p>Decimation is a destructive form of mesh optimization.  When batch converting models with textures, it's important to note that while Blender does its best to preserve UV's when decimating, texture distortion can occur.</p> <p>Example</p> <p>For example, let's say you want to Transmogrify a single <code>FBX</code> file into a <code>USDZ</code> file.  Let's also say you have the <code>Target</code> threshold set to <code>15MB</code> and with default <code>Methods</code> settings.  Your import file is a <code>10MB</code> <code>FBX</code> + (4) 4K, <code>PNG</code> external textures at <code>10MB</code> each = <code>50MB</code> total.  </p> <p>Transmogrifier will run through the following steps in order to optimize the file:</p> <ol> <li>Export the model<ol> <li>Export the model with no adjustments</li> <li>Get the export file's size (<code>50MB</code>)</li> </ol> </li> <li>First iteration    <ol> <li><code>Resize Textures</code> by halving their resolution<ol> <li><code>4096px</code> / <code>2</code> = <code>2048px</code></li> <li>Export the model again</li> <li>Get the export file's size (<code>30MB</code>)</li> </ol> </li> <li><code>Reformat Textures</code> by converting them to a <code>JPEG</code> format<ol> <li>Export the model again</li> <li>Get the export file's size (<code>22MB</code>)<ul> <li>Since <code>22MB</code> is still greater than your target of <code>15MB</code>, Transmogrifier will begin again with another optimize iteration. \ud83d\udd01</li> </ul> </li> </ol> </li> </ol> </li> <li>Second iteration<ol> <li><code>Resize Textures</code> by halving their resolution<ol> <li><code>2048px</code> / <code>2</code> = <code>1024px</code></li> <li>Export the model again</li> <li>Get the export file's size (<code>14MB</code>) <ul> <li>Since <code>14MB</code> &lt; <code>15MB</code>, Transmogrifier will exit the auto-optimize loop and move on the converting the next model. \u2705</li> </ul> </li> </ol> </li> </ol> </li> </ol> <p>What if Transmogrifier Runs out of options?</p> <p>If all methods are exhausted and the file size is still above the target maximum, Transmogrifier will report this in the <code>Conversion Log</code> and move on to converting the next file.</p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"quickstart_demo/","title":"Quickstart Demo \ud83e\uddea","text":"<p>Learn Transmogrifier with a demo and quickstart your first steps using the addon.</p> <p>\"The best way to teach kayaking is not by lecturing on the beach.  Instead, toss a bucket of tennis balls onto the lake and say, 'Go get 'em!'\"</p>"},{"location":"quickstart_demo/#1-download-the-demo-files","title":"1. Download the Demo Files","text":"<p>Download the demo files, then unzip the folder.  Inside you will find 3D models as FBX files along with their associated textures.</p> <p>Download PolyHaven Demo Files</p> <p>PolyHaven</p> <p>PolyHaven is a creative-commons (CC0) library of models, textures and HDRI's.  We've curated 5 models with textures from their library for this demo.</p>"},{"location":"quickstart_demo/#2-add-import","title":"2. Add Import","text":"<p>Click <code>+ Add Import</code> to add an import file format for Transmogrifier to search for.  Leave the format in its default value (<code>FBX</code>).</p> <p></p>"},{"location":"quickstart_demo/#3-select-directory","title":"3. Select <code>Directory</code>","text":"<p>Click on the folder icon at the bottom of the <code>Imports</code> box.  In the pop-up file dialog, double-click into the unzipped \"PolyHaven_Demo_Files\" folder and click <code>Accept</code>.</p> <p></p>"},{"location":"quickstart_demo/#4-add-export","title":"4. Add Export","text":"<p>Click <code>+ Add Export</code> to add an export file format for Transmogrifier to output for each import file it finds.  Leave the format in its default value (<code>GLB</code>).</p> <p></p>"},{"location":"quickstart_demo/#5-check-the-forecast","title":"5. Check the <code>Forecast</code>","text":"<p>Click the <code>Forecast</code> button to predict the batch conversion.  In this case, Transmogrifier should find 5 <code>FBX</code> files in the PolyHaven_Demo_Files folder which will then be converted to 5 <code>GLB</code> files in the next step.</p> <p></p>"},{"location":"quickstart_demo/#6-click-batch-convert","title":"6. Click <code>Batch Convert</code>","text":"<p>Finally, click <code>Batch Convert</code> and let the process run.  When it finishes, you should now be able to find 5 <code>GLB</code> files, one in each model's folder.  </p> <p>Info</p> <p>After this button is clicked, a second Blender window will pop-up.  This window will be greyed-out, and both this and the original Blender window will remain unresponsive until the batch conversion is over.  This is normal operation. </p> <p></p> <p>Success!  You have now performed your first Transmogrification.</p>"},{"location":"run_custom_scripts/","title":"Run Custom Scripts","text":"<p>Create your own custom Python recipes for extending Transmogrifier's functionality.</p> <p>Customs scripts are basically add-ons for Transmogrifier, just like Transmogrifier is an add-on for Blender!</p> <p></p>"},{"location":"run_custom_scripts/#python-file","title":"Python File","text":"<p>Select your custom script saved as a Python file <code>.py</code> to execute during the batch conversion.</p>"},{"location":"run_custom_scripts/#trigger","title":"Trigger","text":"<p>Define at which point your custom script's execution should be triggered.  Synchronize triggers by clicking the link  icon in the upper right of the <code>Custom Scripts</code> box.</p> <code>Before Batch</code> Run script before the batch conversion begins. <code>Before Import</code> Run script immediately before importing a model. <code>Before Export</code> Run script immediately before exporting a model. <code>After Export</code> Run script immediately after exporting a model. <code>After Batch</code> Run script after the batch conversion ends. How do I make a <code>Custom Script</code> for Transmogrifier? <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"run_custom_scripts/#how-do-i-make-a-custom-script-for-transmogrifier","title":"\"How do I make a <code>Custom Script</code> for Transmogrifier?\"","text":"<p>Creating custom scripts is easy for developers and non-developers alike.  </p> <ol> <li> <p>Open Blender and navigate to the <code>Scripting</code> tab.</p> </li> <li> <p>Click <code>+ New</code> in the Text Editor to create a new text data-block.</p> </li> <li> <p>If you know Python for Blender, you can write your script.  It doesn't have to be anything fancy.  Pythonic conventions, such as adding functions and commenting your code, are recommended but not required.  </p> BasicBetter <pre><code># Add_Monkey_and_Shade_Flat.py\n\nbpy.ops.object.select_all(action='DESELECT')\nbpy.ops.mesh.primitive_monkey_add(size=2, enter_editmode=False, align='WORLD', location=(0, 0, 0), scale=(0.01, 0.01, 0.01))\nbpy.ops.object.select_all(action='SELECT')\nbpy.ops.object.shade_flat()\n</code></pre> <pre><code># Add_Monkey_and_Shade_Flat.py\n\n# Add a monkey to the scene.\ndef add_monkey():\n    bpy.ops.object.select_all(action='DESELECT')\n    bpy.ops.mesh.primitive_monkey_add(size=2, enter_editmode=False, align='WORLD', location=(0, 0, 0), scale=(0.01, 0.01, 0.01))\n\n# Shade all objects with flat shading.\ndef shade_flat():\n    bpy.ops.object.select_all(action='SELECT')\n    bpy.ops.object.shade_flat()\n\n# Add monkey and shade flat.\nadd_monkey()\nshade_flat()\n</code></pre> </li> <li> <p>Save your code as a Python (<code>.py</code>) file.</p> </li> </ol> <p>Success!</p> <p>Now you can add your Python recipe as a custom script for Transmogrifier to execute during conversion.</p> <p>New to Python?</p> <p>If you're new to Python programming, don't worry!  You can discover and copy many commands directly from the Blender's user interface.  </p> <p>For example, if you wanted to find the command for adding a Monkey to your scene, simply add the monkey graphically, open the <code>Info</code> panel, copy the monkey's Python command, and paste it into your script.</p> <p></p>"},{"location":"set_scene_properties/","title":"Set Scene Properties","text":"<p>Transmogrifier provides some simple scene-related settings that can influence the properties of exported models.</p> <p></p>"},{"location":"set_scene_properties/#scene-units","title":"Scene Units","text":"<p>Set a custom unit system and length unit for export.</p>"},{"location":"set_scene_properties/#animations","title":"Animations","text":"<p>Sometimes models have unintented keyframes or perhaps you simply want exported models to be static.  When toggled off, this box will override any export preset and remove all animations from all imported files before they are exported. (1)</p> <ol> <li>3DS Max is notorious for adding keyframes to objects upon/before export to FBX without the User's knowledge or intention.  These seemingly innocent keyframes can wreak havoc on the display of GLB and USDZ files in AR.</li> </ol> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"transform_objects/","title":"Transform Objects","text":"<p>Have you ever opened a model that's turned on its side?</p> <p>You now have complete control over your models' positions, orientations, and sizes. </p> <p>Perform custom transformations and apply transformations to every model before export. Filter what transformations to set/apply.</p> <p></p>"},{"location":"transform_objects/#apply-transformations","title":"Apply Transformations","text":"<p>Apply transformations to all objects.  Filter which transforms to apply.</p> <p>Instanced Objects</p> <p>Instanced objects cannot have their transforms applied due to their very nature.</p> <p>Tip</p> <p>This is also known as <code>Freeze Transformations</code> in other DCC apps.</p>"},{"location":"transform_objects/#set-transformations","title":"Set Transformations","text":"<p>Move, rotate, and scale objects before applying transformations and before exporting each file.  Filter which transforms to set.</p> <p>Y-up vs. Z-up</p> <p>The rotation transform gives you manual control over which is axis is considered \"up\", which varies across softwares.</p> <p>Missing Something?</p> <p>Do you think we're missing a feature?  Submit a request on Github!</p> <p>Request Feature</p>"},{"location":"uninstall/","title":"Uninstall Transmogrifier","text":""},{"location":"uninstall/#1-open-blender","title":"1. Open Blender","text":"<p>Open Blender, then navigate to <code>Edit &gt; Preferences</code>.</p> <p></p>"},{"location":"uninstall/#2-disable-transmogrifier","title":"2. Disable Transmogrifier","text":"<p>Select the <code>Add-ons</code> tab, and <code>search</code> for <code>\"Transmogrifier\"</code> in the top right.  Disable the add-on by toggling off the <code>Import-Export: Transmogrifier</code> checkbox.</p> <p></p>"},{"location":"uninstall/#3-remove-transmogrifier","title":"3. Remove Transmogrifier","text":"<p>Click <code>Remove</code> to fully uninstall Transmogrifier.  Then click <code>Save Preferences</code> if your preferences are not set to auto-save.</p> <p></p>"},{"location":"uninstall/#4-close-blender","title":"4. Close Blender","text":"<p>Close Blender.</p> <p>Success!  Transmogrifier is now uninstalled.</p>"},{"location":"update/","title":"Update Transmogrifier","text":""},{"location":"update/#1-open-blender","title":"1. Open Blender","text":"<p>Open Blender, then navigate to <code>Edit &gt; Preferences</code>.</p> <p></p>"},{"location":"update/#2-disable-transmogrifier","title":"2. Disable Transmogrifier","text":"<p>Select the <code>Add-ons</code> tab, and <code>search</code> for <code>\"Transmogrifier\"</code> in the top right.  Disable the add-on by toggling off the <code>Import-Export: Transmogrifier</code> checkbox.</p> <p></p>"},{"location":"update/#3-remove-transmogrifier","title":"3. Remove Transmogrifier","text":"<p>Click <code>Remove</code> to fully uninstall Transmogrifier.  Then click <code>Save Preferences</code> if your preferences are not set to auto-save.</p> <p></p>"},{"location":"update/#4-close-blender","title":"4. Close Blender","text":"<p>Close Blender.</p>"},{"location":"update/#5-re-open-blender","title":"5. Re-open Blender","text":"<p>Re-open Blender.</p>"},{"location":"update/#6-install-transmogrifier","title":"6. Install Transmogrifier","text":"<p>Install Transmogrifier exactly how you first did according to the Installation \ud83d\udce5 section.</p> <p>Success!  Transmogrifier is now updated.</p>"},{"location":"user_interface/","title":"User Interface","text":"<p>Transmogrifier's user interface is responsive, flexible, and consistent with Blender.</p> <p>Tip</p> <p>Don't be afraid to click around and see what the buttons do!</p> Simple/Advanced UITooltipsLayoutLinked SettingsUndo/Redo <p>Transmogrifier has an <code>Advanced UI</code> toggle    that provides many additional features for advanced users.</p> <p></p> <p>Every button and menu comes with its own tooltip - quick descriptions about what they do.  Hover over a button for a couple of seconds and its tooltip will pop up.</p> <p></p> <p>Transmogrifier's UI was designed with the following principles:</p> Boxes and Buttons <p>Related settings are grouped into \"boxes\".  Sometimes there are boxes within boxes.  The icon buttons at the top right of each box affect settings relevant to each box.  Some of them toggle the visibility of menus inside.  </p> <p></p> Need-to-Knows <p>Menu visibility is on a \"need-to-know\" basis, meaning that you will see certain settings only when they are relevant given the context.</p> <p></p> <p>A chain link icon  indicates there are settings in the box that are synchronized.  Breaking the link will enable more granular control per instance.</p> <p></p> <p>You can undo and redo actions within Transmogrifier.</p> <p></p>"}]}